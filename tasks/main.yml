---
# Copyright 2015, Jean-Philippe Evrard <jean-philippe@evrard.me>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather variables for each operating system
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- name: Setup SELinux
  ansible.builtin.include_tasks:
    file: keepalived_selinux.yml
  when:
    - keepalived_selinux_compile_rules | length > 0
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
  tags:
    - keepalived-config

- name: install keepalived package(s)
  ansible.builtin.package:
    name: "{{ [keepalived_package_name] + keepalived_scripts_packages }}"
    state: "{{ keepalived_package_state }}"
    update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"
    cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
  tags:
    - keepalived-apt-packages
    - keepalived-packages
  notify:
    - restart keepalived

- name: Ensure no new "samples" folder appeared
  ansible.builtin.file:
    path: /etc/keepalived/samples/
    state: absent
  when:
    - ansible_os_family | lower == 'debian'

- name: Get IPv6 enabled state
  ansible.builtin.slurp:
    src: /sys/module/ipv6/parameters/disable
  register: _ipv6_disabled
  tags:
    - keepalived-install

- name: Check if IPv6 is enabled
  ansible.builtin.set_fact:
    ipv6_enabled: "{{ not _ipv6_disabled.failed and '0' in (_ipv6_disabled.content | b64decode) }}"
  tags:
    - keepalived-install

- name: Allow consuming apps to bind on non local addresses for IPv4
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    state: present
  when: keepalived_bind_on_non_local | bool
  loop:
    - name: "net.ipv4.ip_nonlocal_bind"
      value: 1
    - name: "net.ipv4.tcp_retries2"
      value: "{{ keepalived_sysctl_tcp_retries }}"
  tags:
    - keepalived-install

- name: Allow consuming apps to bind on non local addresses for IPv6
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    state: present
  when: keepalived_bind_on_non_local | bool
        and ipv6_enabled
  loop:
    - name: "net.ipv6.ip_nonlocal_bind"
      value: 1
  tags:
    - keepalived-install

- name: Get keepalived directory listing
  ansible.builtin.find:
    path: "{{ keepalived_config_directory_path }}"
    file_type: any
    hidden: yes
  register: keepalived_content_result
  when: keepalived_flush_configuration | bool

- name: Remove keepalived directory content
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  when: keepalived_flush_configuration | bool
  loop_control:
    label: "{{ item.path }}"
  loop: "{{ keepalived_content_result.files }}"

- name: Create configuration directories if they do not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ keepalived_config_directory_path }}"
    - "{{ keepalived_config_directory_path }}/scripts"
    - "{{ keepalived_config_directory_path }}/track_files"
    - "{{ keepalived_config_directory_path }}/sync_groups"
    - "{{ keepalived_config_directory_path }}/instances"
    - "{{ keepalived_config_directory_path }}/groups"
    - "{{ keepalived_config_directory_path }}/services"
  tags:
    - keepalived-config

- name: Create keepalived configuration snippets
  ansible.builtin.include_tasks:
    file: create_configuration.yml
  tags:
    - keepalived-config

- name: Remove keepalived configuration snippets
  ansible.builtin.include_tasks:
    file: remove_configuration.yml
  tags:
    - keepalived-config

- name: Drop additional files
  ansible.builtin.include_tasks:
    file: drop_files.yml
  tags:
    - keepalived-config

- name: Make directory for keepalived's systemd overrides
  ansible.builtin.file:
    path: /etc/systemd/system/keepalived.service.d/
    state: directory
    mode: "0755"
  when:
    - keepalived_systemd_overrides | bool

- name: Apply keepalived override to start after network is up
  community.general.ini_file:
    path: /etc/systemd/system/keepalived.service.d/override.conf
    create: yes
    section: 'Unit'
    option: "{{ item }}"
    value: 'network-online.target'
    mode: '0644'
  loop:
    - 'Wants'
    - 'After'
  when:
    - keepalived_systemd_overrides | bool
  notify:
    - restart keepalived

- name: Apply keepalived override to restart service always
  community.general.ini_file:
    path: /etc/systemd/system/keepalived.service.d/override.conf
    section: 'Service'
    option: "Restart"
    value: 'always'
    mode: '0644'
  when:
    - keepalived_systemd_overrides | bool
    - keepalived_systemd_override_service_restart | bool
  notify:
    - restart keepalived

- name: Remove keepalived overrides
  ansible.builtin.file:
    path: /etc/systemd/system/keepalived.service.d/override.conf
    state: absent
  when:
    - not (keepalived_systemd_overrides | bool)

- name: Ensuring keepalived is enabled
  ansible.builtin.service:
    daemon_reload: yes
    name: "{{ keepalived_service_name }}"
    enabled: "yes"
    masked: "no"
